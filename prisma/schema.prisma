
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  gameStats     GameStats?
  gameMatches   GameMatch[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model GameStats {
  id             String   @id @default(cuid())
  userId         String   @unique
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  totalGames     Int      @default(0)
  wins           Int      @default(0)
  losses         Int      @default(0)
  totalShots     Int      @default(0)
  hits           Int      @default(0)
  shipsSunk      Int      @default(0)
  fastestWinTime Int?     // Stored in seconds
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("game_stats")
}

model GameMatch {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  result     String   // "Win" or "Loss"
  shots      Int
  hits       Int
  accuracy   Float    // Stored as decimal (0.82 for 82%)
  shipsSunk  Int
  timeElapsed Int     // Stored in seconds
  createdAt  DateTime @default(now())

  @@map("game_matches")
}

model Leaderboard {
  id        String   @id @default(cuid())
  userId    String   @unique
  userName  String
  wins      Int      @default(0)
  accuracy  Float    @default(0) // Stored as decimal
  rank      Int?
  updatedAt DateTime @updatedAt

  @@map("leaderboard")
}
